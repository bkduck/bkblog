apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: blog
  namespace: default
spec:
  tls:
    - hosts:
        - blog.bkduck.cn
      secretName: blog-https-secret
    - hosts:
        - www.bkduck.cn
      secretName: www-https-secret
    - hosts:
        - bkduck.cn
      secretName: root-https-secret
    - hosts:
        - comment.bkduck.cn
      secretName: comment-https-secret
  rules:
    - host: bkduck.cn
      http:
        paths:
          - backend:
              serviceName: blog
              servicePort: 80
    - host: www.bkduck.cn
      http:
        paths:
          - backend:
              serviceName: blog
              servicePort: 80
    - host: blog.bkduck.cn
      http:
        paths:
          - backend:
              serviceName: blog
              servicePort: 80
    - host: comment.bkduck.cn
      http:
        paths:
          - backend:
              serviceName: comment
              servicePort: 80
  backend:
    serviceName: blog
    servicePort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: blog
  namespace: default
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
  selector:
    k8s-app: blog
  sessionAffinity: ClientIP
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: blog
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: blog
    spec:
      imagePullSecrets:
        - name: blog-bkduck
      containers:
        - image: ccr.ccs.tencentyun.com/blog-bkduck/blog:dev
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 2
          name: blog
          ports:
            - containerPort: 80
              name: 80tcp02
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 2
            timeoutSeconds: 2
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
            - mountPath: /usr/share/nginx/html/db.json
              name: db
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - hostPath:
            path: /data/db.json
            type: "FileOrCreate"
          name: db
        - hostPath:
            path: /data/Thumbs.json
            type: "FileOrCreate"
          name: thumbs
